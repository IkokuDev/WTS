/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    'fleet-owners': FleetOwner;
    drivers: Driver;
    vehicles: Vehicle;
    media: Media;
    vendors: Vendor;
    products: Product;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  role: 'admin' | 'customer' | 'fleet_owner' | 'driver' | 'vendor';
  name: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fleet-owners".
 */
export interface FleetOwner {
  id: string;
  user: string | User;
  companyName: string;
  businessRegistrationNumber: string;
  address: {
    street: string;
    city: string;
    state: string;
    zip: string;
  };
  documents: {
    businessLicense: string | Media;
    insuranceCertificate: string | Media;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "drivers".
 */
export interface Driver {
  id: string;
  user: string | User;
  fleetOwner: string | FleetOwner;
  licenseNumber: string;
  licenseExpiry: string;
  experience: number;
  documents: {
    driverLicense: string | Media;
    medicalCertificate: string | Media;
  };
  status: 'AVAILABLE' | 'ON_TRIP' | 'OFF_DUTY';
  assignedVehicle?: (string | null) | Vehicle;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vehicles".
 */
export interface Vehicle {
  id: string;
  fleetOwner: string | FleetOwner;
  type: 'TRUCK' | 'VAN' | 'TRAILER';
  make: string;
  model: string;
  year: number;
  licensePlate: string;
  capacity: {
    weight: number;
    volume: number;
  };
  documents: {
    registration: string | Media;
    insurance: string | Media;
    inspection: string | Media;
  };
  status: 'AVAILABLE' | 'IN_USE' | 'MAINTENANCE';
  maintenanceHistory?:
    | {
        date: string;
        description: string;
        cost: number;
        id?: string | null;
      }[]
    | null;
  assignedDriver?: (string | null) | Driver;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "vendors".
 */
export interface Vendor {
  id: string;
  user: string | User;
  businessName: string;
  businessType: 'solid_minerals' | 'agric_products' | 'raw_materials' | 'petrol_gas';
  registrationNumber: string;
  address: {
    street: string;
    city: string;
    state: string;
    zip: string;
  };
  documents: {
    businessLicense: string | Media;
    taxCertificate: string | Media;
  };
  status: 'PENDING' | 'APPROVED' | 'SUSPENDED';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: string;
  name: string;
  description: {
    [k: string]: unknown;
  }[];
  price: number;
  vendor: string | Vendor;
  category: 'solid_minerals' | 'agric_products' | 'raw_materials' | 'petrol_gas';
  images: {
    image: string | Media;
    id?: string | null;
  }[];
  priceUnit: 'per_ton' | 'per_kg' | 'per_litre' | 'per_cubic_meter';
  inventory: {
    quantity: number;
    lowStockThreshold: number;
    trackingEnabled?: boolean | null;
    allowBackorders?: boolean | null;
    reservedQuantity: number;
  };
  bulkPricing?:
    | {
        minimumQuantity: number;
        pricePerUnit: number;
        unit: 'tons' | 'kg' | 'litres' | 'm3';
        id?: string | null;
      }[]
    | null;
  shipping: {
    weight: number;
    dimensions: {
      length: number;
      width: number;
      height: number;
    };
    shippingMethods?:
      | {
          method: 'road_freight' | 'rail_freight' | 'sea_freight' | 'air_freight';
          estimatedDays: number;
          pricePerKm: number;
          id?: string | null;
        }[]
      | null;
    specialHandling?: boolean | null;
    handlingInstructions?: string | null;
  };
  variants?:
    | {
        name: string;
        sku: string;
        attributes?: {
          grade?: ('premium' | 'standard' | 'economy') | null;
          purity?: number | null;
          composition?: string | null;
        };
        price: number;
        inventory: number;
        id?: string | null;
      }[]
    | null;
  specifications: {
    weight: number;
    dimensions: {
      length: number;
      width: number;
      height: number;
    };
  };
  minimumOrder: {
    quantity: number;
    unit: 'tons' | 'kg' | 'litres' | 'm3';
  };
  status?: ('active' | 'draft' | 'out_of_stock') | null;
  certificates?:
    | {
        certificate: string | Media;
        certificateType: 'quality_assurance' | 'safety' | 'origin' | 'other';
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}